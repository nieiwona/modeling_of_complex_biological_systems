heatmap.2(as.matrix(cluster_combat$centers),
main = "Bladder Cancer Data Clustered",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
# problem3
pcor <- cor(pheno$samples, method="pearson")
?cor
# problem3
pcor <- cor(pheno, use="complete.obs", method="pearson")
# problem3
pcor <- cor(pheno$cancer, pheno$sample), method = c("pearson"))
# problem3
pcor <- cor(pheno$sample), method = c("pearson"))
# problem3
pcor <- cor(pheno), method = c("pearson"))
png("Goździewska_problem3.png",height=700,width=700)
heatmap.2(as.matrix(pcor),
main = "Bladder Cancer Data Pearson",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
# problem3
pcor <- cor(pheno), method = c("pearson"))
pheno = pData(bladderEset)
# problem3
pcor <- cor(pheno), method = c("pearson"))
library(devtools)
pheno = pData(bladderEset)
edata = exprs(bladderEset)
dim(pheno)
dim(edata)
edata[1:5,1:10]
# Dive into data about samples
names(pheno)
head(pheno)
# problem3
pcor <- cor(pheno), method = c("pearson"))
# problem3
pcor <- cor(pheno, method = c("pearson"))
# problem3
pcor <- cor(pheno, method "pearson")
# problem3
pcor <- cor(pheno, method="pearson")
# problem3
pcor <- cor(pheno, y=NULL, method = "pearson")
# problem3
pcor <- cor(pheno, y=NULL, method = "pearson")
# problem3
pcor <- cor(pheno$batch, method = "pearson")
# problem3
pcor <- cor(pheno$batch, pheno$sample, method = "pearson")
png("Goździewska_problem3.png",height=700,width=700)
# problem3
pcor <- cor(pheno$batch, pheno$sample, method = "pearson")
png("Goździewska_problem3.png",height=700,width=700)
heatmap.2(as.matrix(pcor$centers),
main = "Bladder Cancer Data Pearson",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
heatmap.2(as.matrix(pcor$centers),
main = "Bladder Cancer Data Pearson",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
heatmap.2(as.matrix(pcor),
main = "Bladder Cancer Data Pearson",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
# problem3
pcor <- cor(pheno$batch, pheno$sample, method = "pearson")
png("Goździewska_problem3.png",height=700,width=700)
heatmap.2(as.matrix(pcor$centers),
main = "Bladder Cancer Data Pearson",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
?heatmap.2
heatmap.2(as.matrix(pcor),
main = "Bladder Cancer Data Pearson",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
pcor
library(devtools)
library(Biobase)
library(BatchQC)
library(sva)
library(bladderbatch)
library(broom)
library(tidyverse)
library(edgeR)
library(Rtsne)
library(data.table)
# Bladder Cancer Gene Expression
data(bladderdata)
pheno = pData(bladderEset)
edata = exprs(bladderEset)
dim(pheno)
dim(edata)
edata[1:5,1:10]
# Dive into data about samples
names(pheno)
head(pheno)
# Linear model with technical variables
mod = lm(edata[1,] ~ as.factor(pheno$cancer) + as.factor(pheno$batch))
print(mod)
mod = lm(t(edata) ~ as.factor(pheno$cancer) + as.factor(pheno$batch))
names(mod)
dim(mod$coefficients)
rownames(mod$coefficients)
library(broom)
mod_tidy <- tidy(mod)
ggplot(mod_tidy) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")
ggplot(mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
ggplot(mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")) + geom_histogram(aes(x=p.value), bins = 100, fill="darkorange")
#problem2.1
# Clustering the rows of the data BEFORE combat
cluster <- kmeans(edata, centers = 5)
# Empirical Bayes
batch = pheno$batch
combat_edata = ComBat(dat=edata, batch=pheno$batch, mod=model.matrix(~1, data=pheno), par.prior=TRUE, prior.plots=TRUE)
class(combat_edata)
dim(combat_edata)
combat_edata[1:10,1:10]
library(gplots)
library(RColorBrewer)
my_palette <- colorRampPalette(c("blue", "white", "darkred"))(n = 299)
png("bladder_combat.png",height=700,width=700)
heatmap.2(combat_edata,
main = "Bladder Cancer Data Cleaned by ComBat", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
dendrogram="none",     # only draw a row dendrogram
scale = "row")
dev.off()
# problem3
pcor <- cor(pheno$batch, pheno$sample, method = "pearson")
# problem3
pcor <- cor(pheno$batch, pheno$sample, method = "pearson")
cormat<-signif(pcor,2)
cormat
cormat<-signif(cor(pheno),2)
cormat<-signif(pheno,pcor)
cor(pheno, pheno, method = "pearson")
pheno
pheno$cancer
pheno$cancer
pheno$sample
pheno$cancer
# perform log transformation
logTransformed_pheno = log2(pheno+1)
library(devtools)
library(Biobase)
library(BatchQC)
library(sva)
library(bladderbatch)
library(broom)
library(tidyverse)
library(edgeR)
library(Rtsne)
library(data.table)
# Bottomly Eset Data
load(file="bottomly.Rdata")
ls()
edata <- as.matrix(exprs(bottomly.eset))
dim(edata)
edata[1:5,1:5]
# Bottomly Eset Data
load(file="bottomly.Rdata")
# Bottomly Eset Data
load(file="bottomly.Rdata")
ls()
edata <- as.matrix(exprs(bottomly.eset))
dim(edata)
edata[1:5,1:5]
head(edata)
names(edata)
bottomly.eset
# Bottomly Eset Data
load(file="bottomly.Rdata")
pdata=pData(bottomly.eset)
dim(pdata)
head(pdata)
edata=as.matrix(exprs(bottomly.eset))
dim(edata)
edata[1:5,1:5]
names(pdata)
library(devtools)
library(Biobase)
library(BatchQC)
library(sva)
library(bladderbatch)
library(broom)
library(tidyverse)
library(edgeR)
library(Rtsne)
library(data.table)
# Bottomly Eset Data
load(file="bottomly.Rdata")
pdata=pData(bottomly.eset)
dim(pdata)
head(pdata)
edata=as.matrix(exprs(bottomly.eset))
dim(edata)
edata[1:5,1:5]
# Linear model with technical variables
mod = lm(edata[1,] ~ as.factor(pdata$sample.id) + as.factor(pdata$strain))
print(mod)
# Linear model with technical variables
mod = lm(edata[1,] ~ as.factor(pdata$sample.id) + as.factor(pdata$strain))
print(mod)
mod = lm(t(edata) ~ as.factor(pheno$sample.id) + as.factor(pheno$strain))
mod = lm(t(edata) ~ as.factor(pdata$sample.id) + as.factor(pdata$strain))
names(mod)
dim(mod$coefficients)
rownames(mod$coefficients)
library(broom)
mod_tidy <- tidy(mod)
ggplot(mod_tidy) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
# Linear model with technical variables
mod = lm(edata[1,] ~ as.factor(pdata$experiment.number) + as.factor(pdata$strain))
print(mod)
mod = lm(t(edata) ~ as.factor(pdata$experiment.number) + as.factor(pdata$strain))
names(mod)
dim(mod$coefficients)
rownames(mod$coefficients)
library(broom)
mod_tidy <- tidy(mod)
ggplot(mod_tidy) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
names(edata)
names(pdata)
mod_tidy %>% filter(term == "as.factor(pdata$strain)Strain")
ggplot(mod_tidy %>% filter(term == "as.factor(pdata$strain)Cancer")) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
ggplot(mod_tidy %>% filter(term == "as.factor(pheno$starin)Cancer")) + geom_histogram(aes(x=p.value), bins = 100, fill="darkorange")
mod_tidy %>% filter(term == "as.factor(pdata$experiment.number)Strain")
ggplot(mod_tidy %>% filter(term == "as.factor(pdata$experiment.number)Cancer")) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
ggplot(mod_tidy %>% filter(term == "as.factor(pheno$experiment.number)Cancer")) + geom_histogram(aes(x=p.value), bins = 100, fill="darkorange")
ggplot(mod_tidy) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
# Linear model with technical variables
mod = lm(edata[1,] ~ as.factor(pdata$num.tech.reps) + as.factor(pdata$strain))
print(mod)
mod = lm(t(edata) ~ as.factor(pdata$num.tech.reps) + as.factor(pdata$strain))
names(pdata)
pdata=pData(bottomly.eset)
# Linear model with technical variables
mod = lm(edata[1,] ~ as.factor(pdata$experiment.number) + as.factor(pdata$strain))
print(mod)
mod = lm(t(edata) ~ as.factor(pdata$experiment.number) + as.factor(pdata$strain))
names(mod)
mod_tidy %>% filter(term == "as.factor(pdata$experiment.number)Strain")
ggplot(mod_tidy %>% filter(term == "as.factor(pdata$experiment.number)Cancer")) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
ggplot(mod_tidy %>% filter(term == "as.factor(pheno$experiment.number)Cancer")) + geom_histogram(aes(x=p.value), bins = 100, fill="darkorange")
# problem4.2
batch = pdata$strain
combat_edata = ComBat(dat=edata, batch=pdata$strain, mod=model.matrix(~1, data=pdata), par.prior=TRUE, prior.plots=TRUE)
library(devtools)
library(Biobase)
library(BatchQC)
library(sva)
library(bladderbatch)
library(broom)
library(tidyverse)
library(edgeR)
library(Rtsne)
library(data.table)
# Bladder Cancer Gene Expression
data(bladderdata)
pheno = pData(bladderEset)
edata = exprs(bladderEset)
dim(pheno)
dim(edata)
edata[1:5,1:10]
# Dive into data about samples
names(pheno)
head(pheno)
# Linear model with technical variables
mod = lm(edata[1,] ~ as.factor(pheno$cancer) + as.factor(pheno$batch))
print(mod)
mod = lm(t(edata) ~ as.factor(pheno$cancer) + as.factor(pheno$batch))
names(mod)
dim(mod$coefficients)
rownames(mod$coefficients)
library(broom)
mod_tidy <- tidy(mod)
ggplot(mod_tidy) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")
ggplot(mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
ggplot(mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")) + geom_histogram(aes(x=p.value), bins = 100, fill="darkorange")
?heatmap.2
library(devtools)
library(Biobase)
library(BatchQC)
library(sva)
library(bladderbatch)
library(broom)
library(tidyverse)
library(edgeR)
library(Rtsne)
library(data.table)
# Bladder Cancer Gene Expression
data(bladderdata)
pheno = pData(bladderEset)
edata = exprs(bladderEset)
dim(pheno)
dim(edata)
edata[1:5,1:10]
# Dive into data about samples
names(pheno)
head(pheno)
# Linear model with technical variables
mod = lm(edata[1,] ~ as.factor(pheno$cancer) + as.factor(pheno$batch))
print(mod)
mod = lm(t(edata) ~ as.factor(pheno$cancer) + as.factor(pheno$batch))
names(mod)
dim(mod$coefficients)
rownames(mod$coefficients)
library(broom)
mod_tidy <- tidy(mod)
ggplot(mod_tidy) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")
ggplot(mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
ggplot(mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")) + geom_histogram(aes(x=p.value), bins = 100, fill="darkorange")
?heatmap
png("Goździewska_problem3.png",height=700,width=700)
heatmap.2(as.matrix(pcor),
main = "Pearson correlation",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
library(ggplot2)
# problem3
pcor <- cor(edata, method = "pearson")
png("Goździewska_problem3.png",height=700,width=700)
# problem3
pcor <- cor(edata, method = "pearson")
png("./Goździewska_problem3.png",height=700,width=700)
heatmap.2(as.matrix(pcor),
main = "Pearson correlation",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
library(gplots)
library(devtools)
library(Biobase)
library(BatchQC)
library(sva)
library(bladderbatch)
library(broom)
library(tidyverse)
library(edgeR)
library(Rtsne)
library(data.table)
library(gplots)
# Bladder Cancer Gene Expression
data(bladderdata)
pheno = pData(bladderEset)
edata = exprs(bladderEset)
dim(pheno)
dim(edata)
edata[1:5,1:10]
# Dive into data about samples
names(pheno)
head(pheno)
# Linear model with technical variables
mod = lm(edata[1,] ~ as.factor(pheno$cancer) + as.factor(pheno$batch))
print(mod)
mod = lm(t(edata) ~ as.factor(pheno$cancer) + as.factor(pheno$batch))
names(mod)
dim(mod$coefficients)
rownames(mod$coefficients)
library(broom)
mod_tidy <- tidy(mod)
ggplot(mod_tidy) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")
ggplot(mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")) + geom_histogram(aes(x=estimate), bins = 100, fill="darkorange")
ggplot(mod_tidy %>% filter(term == "as.factor(pheno$cancer)Cancer")) + geom_histogram(aes(x=p.value), bins = 100, fill="darkorange")
# problem3
pcor <- cor(edata, method = "pearson")
png("./Goździewska_problem3.png",height=700,width=700)
heatmap.2(as.matrix(pcor),
main = "Pearson correlation",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
png("./Goździewska_problem3.png",height=700,width=700)
heatmap.2(as.matrix(pcor),
main = "Pearson correlation",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
# Empirical Bayes
batch = pheno$batch
combat_edata = ComBat(dat=edata, batch=pheno$batch, mod=model.matrix(~1, data=pheno), par.prior=TRUE, prior.plots=TRUE)
class(combat_edata)
dim(combat_edata)
combat_edata[1:10,1:10]
library(gplots)
library(RColorBrewer)
my_palette <- colorRampPalette(c("blue", "white", "darkred"))(n = 299)
png("bladder_combat.png",height=700,width=700)
heatmap.2(combat_edata,
main = "Bladder Cancer Data Cleaned by ComBat", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
dendrogram="none",     # only draw a row dendrogram
scale = "row")
# problem3
pcor <- cor(edata, method = "pearson")
png("./Goździewska_problem3.png",height=700,width=700)
heatmap.2(as.matrix(pcor),
main = "Pearson correlation",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
hclustfunc <- function(x) hclust(x, method="complete")
distfunc <- function(x) dist(x,method="euclidean")
my_palette <- colorRampPalette(c("blue", "white", "green", "darkorange", "purple"))(n = 299)
# afterwards I convert png to pdf
png("./problem2_1.png",height=700,width=700)
heatmap.2(as.matrix(edata),
main = "Bladder Cancer Data Clustered",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row",
Colv=FALSE,
Rowv=TRUE,
hclust=hclustfunc,
distfun=distfunc)
hclustfunc <- function(x) hclust(x, method="complete")
distfunc <- function(x) dist(x,method="euclidean")
my_palette <- colorRampPalette(c("blue", "white", "green", "darkorange", "purple"))(n = 299)
?heatmap.2
heatmap.2(as.matrix(edata),
main = "Bladder Cancer Data Clustered",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="row",
scale = "row",
Colv=FALSE,
Rowv=TRUE,
hclust=hclustfunc,
distfun=distfunc)
#problem2.1
cluster <- kmeans(combat, centers = 5)
my_palette <- colorRampPalette(c("blue", "white", "green", "darkorange", "purple"))(n = 299)
# afterwards I convert png to pdf
png("Goździewska_problem2.2.png",height=700,width=700)
heatmap.2(as.matrix(clustert$centers),
main = "Bladder Cancer Data Clustered",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
heatmap.2(as.matrix(cluster$centers),
main = "Bladder Cancer Data Clustered",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
#problem2.1
cluster <- kmeans(combat, centers = 5)
#problem2.1
cluster <- kmeans(edata, centers = 5)
my_palette <- colorRampPalette(c("blue", "white", "green", "darkorange", "purple"))(n = 299)
# afterwards I convert png to pdf
png("Goździewska_problem2.2.png",height=700,width=700)
heatmap.2(as.matrix(cluster$centers),
main = "Bladder Cancer Data Clustered",
trace="none",
margins =c(12,9),
col=my_palette,
dendrogram="none",
scale = "row")
